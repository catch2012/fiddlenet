


@article{RefWorks:71,
	author={Chen H. and Zimbra D.},
	year={2010},
	title={AI and opinion mining},
	journal={IEEE Intell.Syst.IEEE Intelligent Systems},
	volume={25},
	number={3},
	pages={74-76},
	isbn={1541-1672},
	language={English}
}

@article{RefWorks:68,
	author={Robert Cooley and Bamshad Mobasher and Jaideep Srivastava},
	year={1999},
	title={Data Preparation for Mining World Wide Web Browsing Patterns},
	journal={KNOWLEDGE AND INFORMATION SYSTEMS},
	volume={1},
	pages={5-32},
	abstract={The World Wide Web (WWW) continues to grow at an astounding rate in both the sheer volume of tra\#c and the size and complexity of Web sites. The complexity of tasks such as Web site design, Web server design, and of simply navigating through a Web site have increased along with this growth. An important input to these design tasks is the analysis of how a Web site is being used. Usage analysis includes straightforward statistics, such as page access frequency, as well as more sophisticated forms of analysis, such as finding the common traversal paths through a Web site. Web Usage Mining is the application of data mining techniques to usage logs of large Web data repositories in order to produce results that can be used in the design tasks mentioned above. However, there are several preprocessing tasks that must be performed prior to applying data mining algorithms to the data collected from server logs. This paper presents several data preparation techniques in order to identify unique users and user sessions. Also, a method to divide user sessions into semantically meaningful transactions is defined and successfully tested against two other methods. Transactions identified by the proposed methods are used to discover association rules from real world data using the WEBMINER system [15].}},
	keywords={web; web\_mining},
	url={http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.11.3835}
}

@inbook{RefWorks:74,
	author={Ali Ghorbani and Iosif-Viorel Onut},
	editor={Gra√±a Romay,Manuel and Corchado,Emilio and Garcia Sebastian,M.},
	year={2010},
	title={Y-Means: An Autonomous Clustering Algorithm},
	series={Hybrid Artificial Intelligence Systems},
	publisher={Springer Berlin / Heidelberg},
	volume={6076},
	pages={1-13},
	abstract={This paper proposes an unsupervised clustering technique for data classification based on the K-means algorithm. The K-means algorithm is well known for its simplicity and low time complexity. However, the algorithm has three main drawbacks: dependency on the initial centroids, dependency on the number of clusters, and degeneracy. Our solution accommodates these three issues, by proposing an approach to automatically detect a semi-optimal number of clusters according to the statistical nature of the data. As a side effect, the method also makes choices of the initial centroid-seeds not critical to the clustering results. The experimental results show the robustness of the Y-means algorithm as well as its good performance against a set of other well known unsupervised clustering techniques. Furthermore, we study the performance of our proposed solution against different distance and outlier-detection functions and recommend the best combinations.}
}

@article{RefWorks:70,
	author={A. K. Jain and M. N. Murty and P. J. Flynn},
	year={1999},
	month={September},
	title={Data clustering: a review},
	journal={ACM Comput.Surv.},
	volume={31},
	number={3},
	pages={264-323},
	keywords={cluster analysis; clustering applications; exploratory data analysis; incremental clustering; similarity indices; unsupervised learning},
	isbn={0360-0300},
	url={http://doi.acm.org.proxy.hil.unb.ca/10.1145/331499.331504},
        note={Paper is an overview of data clustering concepts and
                  techniques. Clustering is an exploratory undertaking
                  (unsupervised), as opposed to classification
                  (supervised). During clustering, a collection of
                  patterns are organised based on a notion of their
                  similarity to one another. Patterns are typically
                  represented as feature vectors and their
                  organisation occurs within this feature
                  space. Pattern selection involves feature selection
                  as well as feature extraction, transforming input
                  features to produce new salient features. All
                  clustering algorithms will produce clusters
                  regardless of the underlying data so how do we
                  evaluate a cluster algorithm ? Cluster validation
                  studies can be \textit{external}, comparing the
                  recovered structure to an \textit{a priori}
                  structure; \textit{internal}, which examines whether
                  the structure is intrinsically appropriate for the
                  data; or \textit{relative}, which compares two
                  structures and measures their relative merit.\\\\

                  A measure of the similarity between two patterns is
                  essential to most clustering procedures. The most
                  common measure is the Euclidean distance. It works
                  well when a data set has compact, isolated clusters
                  but large scale features tend to dominate unless
                  weighted or normalized. Salient cluster algorithm
                  properties include: agglomerative vs divisive;
                  monothetic vs polythetic; hard vs fuzzy;
                  deterministic vs stochastic; incremental vs
                  non-incremental; and hierarchical vs
                  partitioning.\\\\

                  Hierarchical algorithms produce a
                  \textit{dendrogram} representing nexted groupings of
                  patterns and the similarity thresholds at which they
                  change. Most hierarchical cluster algorithms are
                  variants of the single-link, \textit{single-link}
                  (distance between clusters is the minimum between
                  any two patterns drawn from different clusters);
                  \textit{complete-link} (distance between clusters is
                  the maximum between any two patterns from different
                  clusters); and \textit{minimum-variance} algorithms.

                  Partitioning algorithms are less demanding
                  computationally compared to hierarchical
                  algorithms. A problem of these algorithms is the
                  choice of the number of desired output clusters. The
                  most common and intuitive criterion function used in
                  partitional clustering is the \textit{squared-error}
                  criterion of which \textit{K-Means} is the simplest
                  and most commony used. \textit{K-Means} is one of
                  the most efficient in terms of execution time and
                  one of the few methods appropriate for use on large
                  data sets. \textit{K-Means} requires one to specify
                  the number of clusters to create which is difficult
                  to do optimally. Variants of \textit{K-Means} have
                  been proposed which dynamically merge and/or spilt
                  clusters based on a variance threshold.\\\\

                  Clusters are typically represented by their
                  centroid, a simple scheme if clusters are compact
                  and iso-tropic. If clusters are elongated or
                  non-isotropic, then this representation weak, better
                  replaced by a collection of points.\\\\

                  Search based cluster techniques can be either
                  deterministic or stochastic. Deterministic
                  techniques guarentee an optimal partition by
                  performing exhaustive enumeration. Stochastic serach
                  techniques generate near optimal partitions
                  reasonaly quickly and guarentee asymptotic
                  convergence to optimal partition.\\\\

                  Clustering is subjective by nature. Subjectivity is
                  usually incorporated into some phase of clustering,
                  whether it be in selection of a pattern
                  representation, choosing a similarity measure, or
                  cluster prepresentation. The incorporation of domain
                  knowledge consists of ad-hoc approaches with little
                  in common.\\\\

                  Clustering of large data sets is computationaly
                  demanding and many clustering algorithms do not
                  scale adequately. The emerging discipline of data
                  mining has spurred developments and optimizations in
                  this area. Clustering is used in the data mining
                  process for segmentation of databases into
                  homogeneous groups, predictive modelling, and
                  visualization. If the data set is too large to fit
                  in main memory, techniques like
                  \textit{divide-and-conquer}, incremental clustering,
                  and parallel algorithm implementations have been
                  used.\\\\

                  The paper review several application domains in
                  which clustering has been successfully employed:
                  image recognition, data mining,
        }
}

@article{RefWorks:69,
	author={Anil K. Jain},
	year={2010},
	month={6/1},
	title={Data clustering: 50 years beyond K-means},
	journal={Pattern Recognition Letters},
	volume={31},
	number={8},
	pages={651-666},
	abstract={Organizing data into sensible groupings is one of the most fundamental modes of understanding and learning. As an example, a common scheme of scientific classification puts organisms into a system of ranked taxa: domain, kingdom, phylum, class, etc. Cluster analysis is the formal study of methods and algorithms for grouping, or clustering, objects according to measured or perceived intrinsic characteristics or similarity. Cluster analysis does not use category labels that tag objects with prior identifiers, i.e., class labels. The absence of category information distinguishes data clustering (unsupervised learning) from classification or discriminant analysis (supervised learning). The aim of clustering is to find structure in data and is therefore exploratory in nature. Clustering has a long and rich history in a variety of scientific fields. One of the most popular and simple clustering algorithms, K-means, was first published in 1955. In spite of the fact that K-means was proposed over 50 years ago and thousands of clustering algorithms have been published since then, K-means is still widely used. This speaks to the difficulty in designing a general purpose clustering algorithm and the ill-posed problem of clustering. We provide a brief overview of clustering, summarize well known clustering methods, discuss the major challenges and key issues in designing clustering algorithms, and point out some of the emerging and useful research directions, including semi-supervised clustering, ensemble clustering, simultaneous feature selection during data clustering, and large scale data clustering.},
	keywords={Data clustering; User‚Äôs dilemma; Historical developments; Perspectives on clustering; King-Sun Fu prize},
	isbn={0167-8655},
    note={{Although \textit{K-Means} was devised in 1955, it is still
                  widely used because of its simplicity, efficiency,
                  and empirical success. The paper looks at the
                  difficulties of developing better
                  algorithms. Clustering algorithms can be broadly
                  divided into \textit{hierarchical} and
                  \textit{partitional}. Hierarchical algorithms
                  recursively find nested clusters in either
                  \textit{agglomerative} (bottom up) or
                  \textit{divisive} (top down) mode, taking an ${n *
                  n}$ similarity matrix as input. Partitional
                  algorithms take as input an ${n * d}$ pattern matrix
                  or a similarity matrix.\\\\

                  The \textit{K-Means} algorithm finds a partition
                  such that the squared error between the empirical
                  mean of a cluster and the points in the cluster is
                  minimized. The goal is to minimize the squared error
                  over all clusters however this problem is NP-hard
                  so, out of necessity, \textit{K-Means} is a greedy
                  algorithm which converges to a local
                  minima. Research does show however that if the
                  clusters are well separated, the algorithm will
                  converge with high probability to the global
                  optimum. The main steps of \textit{K-Means} are
\begin{enumerate}
\item Select an initial partition and repeat steps 2 and 3 until cluster membership stablizes.
\item Generate a new partition by assigning each pattern to its nearest cluster center.
\item Compute new cluster centers.\\\\
\end{enumerate} 

                  \textit{K-Means} requires three user-specified
                  parameters: number of clusters, cluster
                  initialization, and distance metric. Selection of
                  number of clusters is difficult and usually based on
                  heuristics and/or repeated execution with different
                  number of clusters, adjudicated by a domian
                  expert. \textit{K-Means} typically uses the
                  Euclidean distance metric and as a result, finds
                  hypershperical shaped clusters.\\\\

                  Clustering algorithms have been developed that model
                  pattern density by a probabilistic mixture model
                  viz. EM algorithm and several Bayesian
                  approaches. These methods are attractive because of
                  their ability to deal with arbitrary shaped clusters
                  but have difficulty dealing with high dimensional
                  data the feature space is characterisitically
                  sparse, making it difficult to distinguish high
                  density regions from low. Graph theoretic clustering
                  is another class of clustering algorithms. These
                  algorithms represents data points as nodes in a
                  graph with connecting edges weighted by their
                  pair-wise similarity. The central idea is to
                  partition the nodes into two groups such that the
                  weights of the edges between the two groups is
                  minimised.

                   All the variables involved in a clustering project
                  make it inherently difficult. One of the most
                  important decisions is that of data
                  representation. A good data representation will
                  result in compact, well separated clusters however
                  there is no universally good representation and the
                  process must be guided by domain knowledge. Another
                  variable is the number of clusters. Automatic
                  determination of this variable has been one of the
                  most difficult problems in
                  clustering. Alternatively, the optimal number of
                  clusters must be determined through trial and error.

                  Since clustering algorithms tend to find clusters
                  irrespective of whether they exist, it is important
                  to objectively evaluate whether the data has a
                  natural tendency to cluster. \textit{Cluster
                  validation} is the formal evaluation of clustering
                  results in a quantitative and objective
                  manner. Cluster validity measures can be
                  \textit{internal}, \textit{external}, or
                  \textit{relative}. Internal measures asses the fit
                  between the structure imposed by the algorithm and
                  the data itself. Relative measures compare the
                  structure imposed by different algorithms on the
                  same data. External measures compare cluster
                  structure to some a priori information, namely
                  "true" class labels.\\\\

                  Stability of a clustering solution is a measure of
                  how much variation occurs in the structure imposed
                  over differnt subsamples drawn from the input
                  data. Different measures of variation can be used to
                  obtain different stability measures. Since many
                  algorithms are asymptotically stable, it may be
                  important to consider the rate at which stability is
                  reached.

                  Some recent clustering trends include:
\begin{itemize}
\item \textbf{Clustering Ensembles}: combine the resulting partitions resulting from application of differing clustering methods on the same data.
\item \textbf{Semi-Supervised Clustering}:  a subset of the data is labelled and these are used to impose pairwise contraints (\textit{must-link} and \textit{cannot-link}) on the cluster algorithm.
\item \textbf{Large-Scale Clustering}: algorithms developd to handel large data sets can be classified as: efficient nearest neighbour (NN), data summarization, distributed computing, incremental clustering, or sampling-based methods.

}

@misc{RefWorks:67,
	author={Bing Liu and SpringerLink (Online service)},
	year={2007},
	title={Web data mining exploring hyperlinks, contents, and usage data},
	isbn={9783540378822 3540378820},
	language={English}
}

@book{RefWorks:75,
	author={Tom M. Mitchell},
	year={1997},
	title={Machine Learning},
	publisher={McGraw-Hill},
	address={New York},
	note={ID: 36417892},
	isbn={0070428077 9780070428072 0071154671 9780071154673},
	language={English}
}

@article{RefWorks:61,
	author={Foster Provost and Tom Fawcett},
	year={2001},
	title={Robust Classification for Imprecise Environments},
	journal={Machine Learning},
	volume={42},
	number={3},
	pages={203-231},
	abstract={In real-world environments it usually is difficult to specify target operating conditions precisely, for example, target misclassification costs. This uncertainty makes building robust classification systems problematic. We show that it is possible to build a hybrid classifier that will perform at least as well as the best available classifier for any target conditions. In some cases, the performance of the hybrid actually can surpass that of the best known classifier. This robust performance extends across a wide variety of comparison frameworks, including the optimization of metrics such as accuracy, expected cost, lift, precision, recall, and workforce utilization. The hybrid also is efficient to build, to store, and to update. The hybrid is based on a method for the comparison of classifier performance that is robust to imprecise class distributions and misclassification costs. The ROC convex hull (ROCCH) method combines techniques from ROC analysis, decision analysis and computational geometry, and adapts them to the particulars of analyzing learned classifiers. The method is efficient and incremental, minimizes the management of classifier performance data, and allows for clear visual comparisons and sensitivity analyses. Finally, we point to empirical evidence that a robust hybrid classifier indeed is needed for many real-world problems.},
	isbn={0885-6125}
}

@misc{RefWorks:72,
  author = 	 {Magnus Rosell},
  year = 	 {2006},
  title = 	 {{Introduction to Information Retrieval and Text Clustering}},
  note = 	 {I think Magnus' work is absolutely brilliant.},
  abstract = 	 {Information Retrieval (IR) is a large and growing field within Natural Language Processing (NLP). The search engine is the most well-known (and perhaps still the only really useful) application. Search engines like Google and AltaVista are used by many people on a daily basis. There are several other applications within IR. Among them this text considers text clustering in particluar. A text clustering algorithm partitions a set of texts so that texts within the same group are as similar in content as possible. It is done without using any predefined catagories. Text clustering can for instance be applied to the documents retrieved by a search engine, so that they can be presented in groups according to content.}
}

@article{RefWorks:73,
	author={G. P. Zhang},
	year={2000},
	title={Neural networks for classification: a survey},
	journal={Systems, Man, and Cybernetics, Part C: Applications and Reviews, IEEE Transactions on},
	volume={30},
	number={4},
	pages={451-462},
	note={{This paper is a review of the use of Artificial Neural
                  Networks (ANN) for classification tasks. It compares
                  ANNs to statistically based classification
                  procedures and explains advantages and disadvantages
                  of ANN relative to these more traditional
                  approaches. The paper shows how ANNs are able to
                  estimate posterior classification probabilities by
                  virtue of the fact that ANNs are typically trained
                  by attempting to minimize mean squared errors. This
                  provides a direct link between ANN classifications
                  and statistical methods, particularly Bayesian.\\\\
                  Direct comparison of ANN and statistical classifiers
                  may not be possible because ANNs are non-linear and
                  model-free, while statistical methods are linear and
                  model-based. However, by appropriately encoding ANN
                  outputs, we can use ANNs to directly model some high
                  order discriminant functions. Analysis along these
                  lines has shown that the hidden layers of an MLP
                  project the data onto different clusters in a way
                  that these clusters can be further aggregated into
                  different classes. However, the added flexibility of
                  ANNs due to hidden layers does not automatically
                  guarantee their superiority over logistical
                  regression due to possible overfitting and other
                  inherent problems.\\\\
                  Due to the variables associated with constructing
                  ANN classifiers and the local minima problem
                  associated with training ANNs, there is an inherent
                  error between true posterior probabilities and the
                  least square estimates provided by ANN. This prediction error
                  is composed of two components, the
                  \textit{approximation error} and the
                  \textit{estimation error}. The \textit{approximation
                  error} reflects a inherent irreducible consequence
                  of the randomness of the training data. The
                  \textit{estimation error} is a reflection of the
                  effectiveness of the ANN to approximate the target
                  function.\\\\
                  The paper describes how a bias-plus-variance
                  decomposition of the ANN prediction error provides
                  useful information on how the estimate differs from
                  the target function. The model bias quantifies how
                  the average estimates over all possible data sets of
                  the same size differ from the target function. Bias
                  is an indication of the limitations of the model
                  itself. Model variance is an indication of the
                  sensitivity of the estimation function to the
                  training data set. Bias and variance are generally
                  conflicting goals. ANNs are flexible and tend to
                  have low bias but high variance.\\\\
                  Ensemble methods are described where classifiers are
                  combined by averaging or voting prediction results
                  from multiple ANNs. Improvements in prediction
                  results are attributed to reduction of variance. The
                  technique seems to work best when the voting models
                  disagree with one another strongly i.e. are
                  biased. Averaging seems to offset this bias and
                  reduce sensitivity to the data. Methods of
                  constructing biased models include statistical
                  resampling techniques and using different feature
                  variables.\\\\
                  Feature selection methods for ANNs are mostly
                  heuristic in nature and and lack statistical
                  justification.\\\\
                  Taking misclassification costs into account seems to
                  improve the performance of ANNs in terms of
                  classification and feature selection. Various
                  techniques are described for incorporating
                  misclassification cost information and prior
                  knowledge of relative class importance, however,
                  little research has been done in the this area.
                  }},
	abstract={Classification is one of the most active research and application areas of neural networks. The literature is vast and growing. This paper summarizes some of the most important developments in neural network classification research. Specifically, the issues of posterior probability estimation, the link between neural and conventional classifiers, learning and generalization tradeoff in classification, the feature variable selection, as well as the effect of misclassification costs are examined. Our purpose is to provide a synthesis of the published research in this area and stimulate further research interests and efforts in the identified topics},
	keywords={generalisation (artificial intelligence); learning (artificial intelligence); neural nets; pattern classification; classification; conventional classifiers; feature variable selection; generalization; learning; misclassification costs; neural classifiers; neural networks; posterior probability estimation},
	isbn={1094-6977}
}

